{
	"info": {
		"_postman_id": "816374e1-fedf-4203-ad54-8bab7ab2a6fd",
		"name": "Redbox Portal API - With tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "REST API",
			"item": [
				{
					"name": "Record Management",
					"item": [
						{
							"name": "Create RDMP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Test oid exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"    postman.setEnvironmentVariable(\"dmpOid\", jsonData.oid);",
											"    var randomNumber = _.random(100);",
											"    postman.setEnvironmentVariable(\"randomNumber\", randomNumber);",
											"    postman.setEnvironmentVariable(\"researcherUsername\", \"researcheruser\" + randomNumber);",
											"    postman.setEnvironmentVariable(\"researcherEmail\", \"researcheruser\" + randomNumber + \"@email.edu.au\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Andrew's Postman test\",\n    \"dc:identifier\": \"http://purl.org/au-research/grants/nhmrc/566728\",\n    \"description\": \"Movement of molecules within cells by a process known as membrane transport is critical for normal cell function and also exploited by bacteria to promote infection. The pathway that connects the import pathway to the export pathway is essential for the function of a large number of proteins, however this connecting pathway is poorly characterised. This study will define the machinery of this trafficking pathway, which will provide the ability to modulate biological processes and cytotoxicity.\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"contributor_ci\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributors\": [\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n        }\n    ],\n    \"vivo:Dataset_redbox:DataCollectionMethodology\": \"The data collection methodology\",\n    \"vivo:Dataset_dc_format\": \"xls\",\n    \"vivo:Dataset_dc:location_rdf:PlainLiteral\": \"eResearch Store network drive\",\n    \"vivo:Dataset_dc:source_dc:location_rdf:PlainLiteral\": \"shared university network drive (e.g. G, H, etc)\",\n    \"vivo:Dataset_dc:extent\": \"100GB - 2TB\",\n    \"redbox:retentionPeriod_dc:date\": \"1year\",\n    \"dc:rightsHolder_dc:name\": \"myUni\",\n    \"dc:accessRights\": \"permission from the data manager\",\n    \"authorization\": []\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/metadata/rdmp",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"metadata",
										"rdmp"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get RDMP's Metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Title is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Andrew's Postman test\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/metadata/{{dmpOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"metadata",
										"{{dmpOid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get RDMP's ObjectMetadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Type and Form is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"rdmp\");",
											"    pm.expect(jsonData.form).to.eql(\"default-1.0-draft\");",
											"    postman.setEnvironmentVariable(\"brandId\", jsonData.brandId);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/objectmetadata/{{dmpOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"objectmetadata",
										"{{dmpOid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update RDMP Metadata",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test oid is equal to the requested oid value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"    pm.expect(jsonData.oid).to.eql(postman.getEnvironmentVariable(\"dmpOid\")); ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Andrew's Postman test - Updated\",\n    \"dc:identifier\": \"http://purl.org/au-research/grants/nhmrc/566728\",\n    \"description\": \"Movement of molecules within cells by a process known as membrane transport is critical for normal cell function and also exploited by bacteria to promote infection. The pathway that connects the import pathway to the export pathway is essential for the function of a large number of proteins, however this connecting pathway is poorly characterised. This study will define the machinery of this trafficking pathway, which will provide the ability to modulate biological processes and cytotoxicity.\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"contributor_ci\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributors\": [\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n        }\n    ],\n    \"vivo:Dataset_redbox:DataCollectionMethodology\": \"The data collection methodology\",\n    \"vivo:Dataset_dc_format\": \"xls\",\n    \"vivo:Dataset_dc:location_rdf:PlainLiteral\": \"eResearch Store network drive\",\n    \"vivo:Dataset_dc:source_dc:location_rdf:PlainLiteral\": \"shared university network drive (e.g. G, H, etc)\",\n    \"vivo:Dataset_dc:extent\": \"100GB - 2TB\",\n    \"redbox:retentionPeriod_dc:date\": \"1year\",\n    \"dc:rightsHolder_dc:name\": \"myUni\",\n    \"dc:accessRights\": \"permission from the data manager\",\n    \"authorization\": []\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/metadata/{{dmpOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"metadata",
										"{{dmpOid}}"
									]
								},
								"description": "http://localhost:1500/default/rdmp/api/records/rdmp/create"
							},
							"response": []
						},
						{
							"name": "List RDMPs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"There is more than 1 RDMP record in the records\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.records.length).to.be.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Check record has oid and metadata properties\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.records[0]).to.have.property(\"oid\")",
											"    pm.expect(jsonData.records[0]).to.have.property(\"metadata\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/list?recordType=rdmp",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"list"
									],
									"query": [
										{
											"key": "recordType",
											"value": "rdmp"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Export RDMP Records",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"There is more than 1 RDMP record in the records\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.records.length).to.be.greaterThan(0);",
											"});",
											"",
											"pm.test(\"Content-Disposition is present and valid\", function () {",
											"    pm.response.to.have.header(\"Content-Disposition\");",
											"    pm.response.to.be.header(\"Content-Disposition\", 'attachment; filename=\"Plan - Exported Records.json\"');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/export/record/download/json?before=&after=&recType=rdmp",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"export",
										"record",
										"download",
										"json"
									],
									"query": [
										{
											"key": "before",
											"value": ""
										},
										{
											"key": "after",
											"value": ""
										},
										{
											"key": "recType",
											"value": "rdmp"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get RDMP's Metadata - Updated Test",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Title is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.title).to.eql(\"Andrew's Postman test - Updated\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/metadata/{{dmpOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"metadata",
										"{{dmpOid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get RDMP's Record Audit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.be.ok",
											"});",
											"",
											"pm.test(\"Number of found items is returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(pm.response.json()).to.have.property('summary')",
											"      .and.to.have.property('numFound')",
											"      .and.equal(2)",
											"});",
											"",
											"pm.test(\"Data is returned\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(pm.response.json()).to.have.property('records')",
											"      .and.to.have.property(0)",
											"      .and.to.have.property('redboxOid')",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/audit/{{dmpOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"audit",
										"{{dmpOid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get RDMP's Record Audit with Date filters",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.be.ok",
											"});",
											"",
											"pm.test(\"Zero items found\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(pm.response.json()).to.have.property('summary')",
											"   .and.to.have.property('numFound')",
											"      .and.equal(0)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "",
										"type": "text",
										"value": "",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/audit/{{dmpOid}}?dateFrom=2023&dateTo=2021",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"audit",
										"{{dmpOid}}"
									],
									"query": [
										{
											"key": "dateFrom",
											"value": "2023"
										},
										{
											"key": "dateTo",
											"value": "2021"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Give user edit permissions to RDMP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Edit permissions applied\", function () {",
											"    var jsonData = pm.response.json();",
											"    //TODO: This is because of the save trigger",
											"    pm.expect(true).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"users\": [\"user\"]\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/permissions/edit/{{dmpOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"permissions",
										"edit",
										"{{dmpOid}}"
									]
								},
								"description": "http://localhost:1500/default/rdmp/api/records/rdmp/create"
							},
							"response": []
						},
						{
							"name": "Create RDMP For Deletion",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Test oid exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"    postman.setEnvironmentVariable(\"dmpOidToDelete\", jsonData.oid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Andrew's Postman test\",\n    \"dc:identifier\": \"http://purl.org/au-research/grants/nhmrc/566728\",\n    \"description\": \"Movement of molecules within cells by a process known as membrane transport is critical for normal cell function and also exploited by bacteria to promote infection. The pathway that connects the import pathway to the export pathway is essential for the function of a large number of proteins, however this connecting pathway is poorly characterised. This study will define the machinery of this trafficking pathway, which will provide the ability to modulate biological processes and cytotoxicity.\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"contributor_ci\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributors\": [\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n        }\n    ],\n    \"vivo:Dataset_redbox:DataCollectionMethodology\": \"The data collection methodology\",\n    \"vivo:Dataset_dc_format\": \"xls\",\n    \"vivo:Dataset_dc:location_rdf:PlainLiteral\": \"eResearch Store network drive\",\n    \"vivo:Dataset_dc:source_dc:location_rdf:PlainLiteral\": \"shared university network drive (e.g. G, H, etc)\",\n    \"vivo:Dataset_dc:extent\": \"100GB - 2TB\",\n    \"redbox:retentionPeriod_dc:date\": \"1year\",\n    \"dc:rightsHolder_dc:name\": \"myUni\",\n    \"dc:accessRights\": \"permission from the data manager\",\n    \"authorization\": []\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/metadata/rdmp",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"metadata",
										"rdmp"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Success is set and is true\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success');",
											"    pm.expect(jsonData.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/metadata/{{dmpOidToDelete}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"metadata",
										"{{dmpOidToDelete}}"
									]
								},
								"description": "Delete Record"
							},
							"response": []
						},
						{
							"name": "Create Datarecord for Attachments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Test oid exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"    postman.setEnvironmentVariable(\"attDataRecordOid\", jsonData.oid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameterRetriever\": \"\",\n    \"rdmpGetter\": \"\",\n    \"\": {},\n    \"rdmp\": {\n        \"oid\": \"{{dmpOid}}\",\n        \"title\": \"Andrew's Postman test - Updated from form AJAX call\"\n    },\n    \"aim_project_name\": \"Andrew's Postman test - Updated from form AJAX call\",\n    \"foaf:fundedBy_foaf:Agent\": [\n        \"\"\n    ],\n    \"dc:coverage_vivo:DateTimeInterval_vivo:end\": \"\",\n    \"foaf:fundedBy_vivo:Grant\": [\n        \"\"\n    ],\n    \"dc:subject_anzsrc:for\": [\n        {\n            \"name\": \"01 - MATHEMATICAL SCIENCES\",\n            \"label\": \"MATHEMATICAL SCIENCES\",\n            \"notation\": \"01\"\n        }\n    ],\n    \"dc:subject_anzsrc:seo\": [],\n    \"title\": \"A Data record\",\n    \"description\": \"Data record\",\n    \"datatype\": \"collection\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"contributor_ci\": {\n        \"text_full_name\": \"Alberto Zweinstein\",\n        \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n        \"email\": \"alberto.zweinstein@example.edu.au\",\n        \"given_name\": \"Alberto\",\n        \"family_name\": \"Zweinstein\",\n        \"honorific\": \"Dr\",\n        \"full_name_family_name_first\": \"Zweinstein, Alberto\",\n        \"username\": \"\",\n        \"role\": \"Chief Investigator\",\n        \"orcid\": null\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"username\": \"\",\n        \"role\": \"Data manager\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributors\": [\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"username\": \"\",\n            \"role\": \"Contributors\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n        }\n    ],\n    \"contributor_supervisor\": {\n        \"text_full_name\": null,\n        \"full_name_honorific\": \"\",\n        \"email\": null,\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Supervisor\",\n        \"orcid\": null\n    },\n    \"dataowner_name\": \"Alberto Zweinstein\",\n    \"dataowner_email\": \"alberto.zweinstein@example.edu.au\",\n    \"redbox:retentionPeriod_dc:date\": \"1year\",\n    \"redbox:retentionPeriod_dc:date_skos:note\": \"\",\n    \"disposalDate\": \"\",\n    \"related_publications\": [\n        {\n            \"related_url\": \"\",\n            \"related_title\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"dataLocations\": [],\n    \"software_equipment\": \"\"\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/metadata/dataRecord",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"metadata",
										"dataRecord"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add attachment to Datarecord",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "attachmentFields",
											"type": "file",
											"src": "test/postman/attachment.png"
										},
										{
											"key": "dataLocations",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/datastreams/{{attDataRecordOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"datastreams",
										"{{attDataRecordOid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Attachments for Datarecord",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has attachments\", function () {",
											"    var jsonData = pm.response.json();",
											"    // pm.expect()",
											"    pm.expect(_.size(jsonData)).to.gt(0);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/datastreams/{{attDataRecordOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"datastreams",
										"{{attDataRecordOid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Temporary Datapub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Test oid exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"    postman.setEnvironmentVariable(\"tempDataPubOid\", jsonData.oid);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameterRetriever\": \"\",\n    \"dataRecordGetter\": \"\",\n    \"\": {},\n    \"title\": \"A Data record\",\n    \"description\": \"Data record\",\n    \"datatype\": \"collection\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"foaf:fundedBy_foaf:Agent\": [\n        {}\n    ],\n    \"foaf:fundedBy_vivo:Grant\": [\n        {}\n    ],\n    \"dc:subject_anzsrc:for\": [\n        {\n            \"name\": \"01 - MATHEMATICAL SCIENCES\",\n            \"label\": \"MATHEMATICAL SCIENCES\",\n            \"notation\": \"01\"\n        }\n    ],\n    \"dc:subject_anzsrc:seo\": [],\n    \"startDate\": \"\",\n    \"endDate\": \"\",\n    \"timePeriod\": \"\",\n    \"geolocations\": [\n        \"\"\n    ],\n    \"geospatial\": {},\n    \"accessRightsToggle\": \"\",\n    \"dataLocations\": [\n        {\n            \"type\": \"attachment\",\n            \"location\": \"b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"mimeType\": \"image/png\",\n            \"name\": \"Screen Shot 2018-11-26 at 3.39.48 pm.png\",\n            \"fileId\": \"d3de61376e5bc93c814607ee604ebac5\",\n            \"uploadUrl\": \"http://localhost:1500/default/rdmp/record/b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"selected\": true\n        }\n    ],\n    \"dataLicensingAccess_manager\": \"Prof Paul Gleeson\",\n    \"dc:accessRights\": \"Open\",\n    \"accessRights_url\": \"\",\n    \"related_publications\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_websites\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_metadata\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_data\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_services\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"license_identifier\": \"\",\n    \"license_notes\": \"\",\n    \"license_other_url\": \"\",\n    \"license_statement\": \"Copyright ReDBox Research Data 2018\",\n    \"license_statement_url\": \"\",\n    \"citation_doi\": \"\",\n    \"requestIdentifier\": [],\n    \"citation_title\": \"A Data Record\",\n    \"creators\": [\n        {\n            \"text_full_name\": \"Alberto Zweinstein\",\n            \"email\": \"alberto.zweinstein@example.edu.au\",\n            \"role\": \"Chief Investigator\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"Zweinstein\",\n            \"given_name\": \"Alberto\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Data manager\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Contributors\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": null,\n            \"email\": null,\n            \"role\": \"Supervisor\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"\",\n            \"given_name\": \"\"\n        }\n    ],\n    \"citation_publisher\": \"ReDBox Research Data\",\n    \"citation_url\": \"\",\n    \"citation_publication_date\": \"\",\n    \"citation_generated\": \"Zweinstein, Alberto; Paul Gleeson, Prof; Paul Gleeson, Prof (Invalid date): A Data Record. ReDBox Research Data. {ID_WILL_BE_HERE}\",\n    \"dataowner_name\": \"Alberto Zweinstein\",\n    \"dataowner_email\": \"alberto.zweinstein@example.edu.au\",\n    \"contributor_ci\": {\n        \"text_full_name\": \"Alberto Zweinstein\",\n        \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n        \"email\": \"alberto.zweinstein@example.edu.au\",\n        \"given_name\": \"Alberto\",\n        \"family_name\": \"Zweinstein\",\n        \"honorific\": \"Dr\",\n        \"full_name_family_name_first\": \"Zweinstein, Alberto\",\n        \"username\": \"\",\n        \"role\": \"Chief Investigator\"\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"given_name\": \"Prof\",\n        \"family_name\": \"Paul Gleeson\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"Paul Gleeson, Prof\",\n        \"username\": \"\",\n        \"role\": \"Data manager\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributor_supervisor\": {\n        \"text_full_name\": \"\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"\",\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Supervisor\"\n    },\n    \"embargoByDate\": \"\",\n    \"embargoUntil\": null,\n    \"embargoNote\": \"\",\n    \"reviewerNote\": \"\",\n    \"ckanLocation\": \"\"\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/metadata/dataPublication",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"metadata",
										"dataPublication"
									]
								}
							},
							"response": []
						},
						{
							"name": "Transition Workflow of Data publication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Success is set and is equal to true\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('success');",
											"    pm.expect(jsonData.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/records/workflow/step/queued/{{tempDataPubOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"records",
										"workflow",
										"step",
										"queued",
										"{{tempDataPubOid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User Management",
					"item": [
						{
							"name": "List Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Number of users returned in results array equals numFound or 10\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    var numFound = jsonData.summary.numFound;",
											"    ",
											"    if(numFound < 10) {",
											"        pm.expect(jsonData.records.length).to.eql(numFound);",
											"    } else {",
											"        pm.expect(jsonData.records.length).to.eql(10);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"users"
									]
								},
								"description": "http://localhost:1500/default/rdmp/api/records/rdmp/create"
							},
							"response": []
						},
						{
							"name": "Get Admin User Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Username is admin\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    var username = jsonData.username;",
											"    ",
											"    pm.expect(username).to.eql('admin');",
											"    ",
											"        ",
											"});",
											"",
											"pm.test(\"email address is admin@redboxresearchdata.com.au\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    var email = jsonData.email;",
											"    ",
											"    pm.expect(email).to.eql('admin@redboxresearchdata.com.au');",
											"    ",
											"        ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/users/get?searchBy=email&query=admin@redboxresearchdata.com.au",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"users",
										"get"
									],
									"query": [
										{
											"key": "searchBy",
											"value": "email"
										},
										{
											"key": "query",
											"value": "admin@redboxresearchdata.com.au"
										}
									]
								},
								"description": "http://localhost:1500/default/rdmp/api/records/rdmp/create"
							},
							"response": []
						},
						{
							"name": "Attempt to retrieve user that does not exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Error message is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    var message = jsonData.message;",
											"    ",
											"    pm.expect(message).to.eql('No user found with given criteria');",
											"    ",
											"        ",
											"});",
											"",
											"pm.test(\"Details message is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    var details = jsonData.details;",
											"    ",
											"    pm.expect(details).to.eql('Searchby: email and Query: fake@redboxresearchdata.com.au');",
											"    ",
											"        ",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/users/get?searchBy=email&query=fake@redboxresearchdata.com.au",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"users",
										"get"
									],
									"query": [
										{
											"key": "searchBy",
											"value": "email"
										},
										{
											"key": "query",
											"value": "fake@redboxresearchdata.com.au"
										}
									]
								},
								"description": "http://localhost:1500/default/rdmp/api/records/rdmp/create"
							},
							"response": []
						},
						{
							"name": "Create API Researcher User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Test response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('id');",
											"    pm.expect(jsonData).to.have.property('username');",
											"    pm.expect(jsonData).to.have.property('name');",
											"    pm.expect(jsonData).to.have.property('email');",
											"    pm.expect(jsonData).to.have.property('type');",
											"    pm.expect(jsonData).to.have.property('lastLogin');",
											"    postman.setEnvironmentVariable(\"apiUserId\", jsonData.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"apiresearcher34\",\n    \"name\": \"researcher created via API\",\n    \"email\": \"apiresearcher34@redboxresearchdata.com.au\",\n    \"password\": \"a12345672A!\",\n    \"roles\": [\"Admin\",\"Researcher\",\"Librarian\"]\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update API Researcher User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Test response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('id');",
											"    pm.expect(jsonData).to.have.property('username');",
											"    pm.expect(jsonData).to.have.property('name');",
											"    pm.expect(jsonData).to.have.property('email');",
											"    pm.expect(jsonData).to.have.property('type');",
											"    pm.expect(jsonData).to.have.property('lastLogin');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{apiUserId}}\",\n    \"name\": \"researcher created via API - modified\",\n    \"email\": \"apiresearcher@redboxresearchdata.com.au\",\n    \"password\": \"a12345672A!\"\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate API Researcher User API Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('token');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/users/token/generate?id={{apiUserId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"users",
										"token",
										"generate"
									],
									"query": [
										{
											"key": "id",
											"value": "{{apiUserId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke API Researcher User API Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('id');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/default/rdmp/api/users/token/revoke?id={{apiUserId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"users",
										"token",
										"revoke"
									],
									"query": [
										{
											"key": "id",
											"value": "{{apiUserId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "Search Index",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has record array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property(\"records\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/search/?searchStr=Andrew",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"search",
										""
									],
									"query": [
										{
											"key": "searchStr",
											"value": "Andrew"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Index Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/search/index?oid={{dmpOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"search",
										"index"
									],
									"query": [
										{
											"key": "oid",
											"value": "{{dmpOid}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Form Management",
					"item": [
						{
							"name": "List Forms",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has forms in response\", function () {",
											"    var jsonData = pm.response.json();",
											"     pm.expect(jsonData).to.have.property(\"records\");",
											"     pm.expect(jsonData.records.length).to.be.greaterThan(0)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/forms",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"forms"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Form",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has name property\", function () {",
											"    var jsonData = pm.response.json();",
											"     pm.expect(jsonData).to.have.property(\"name\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/forms/get?name=default-1.0-draft",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"forms",
										"get"
									],
									"query": [
										{
											"key": "name",
											"value": "default-1.0-draft"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Record Type Management",
					"item": [
						{
							"name": "List Record Types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has forms in response\", function () {",
											"    var jsonData = pm.response.json();",
											"     pm.expect(jsonData).to.have.property(\"records\");",
											"     pm.expect(jsonData.records.length).to.be.greaterThan(0)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/forms",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"forms"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Record Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has name property\", function () {",
											"    var jsonData = pm.response.json();",
											"     pm.expect(jsonData).to.have.property(\"name\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/forms/get?name=default-1.0-draft",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"forms",
										"get"
									],
									"query": [
										{
											"key": "name",
											"value": "default-1.0-draft"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Administration",
					"item": [
						{
							"name": "Refresh Cached Resources",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/api/admin/refreshCachedResources",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"api",
										"admin",
										"refreshCachedResources"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "AJAX calls",
			"item": [
				{
					"name": "Admin User Tests",
					"item": [
						{
							"name": "Login via Internal authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setGlobalVariable(\"cookie\",postman.getResponseHeader(\"set-cookie\") );",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that user returned is admin\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user.username).to.eql(\"admin\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/user/login"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"rbadmin\",\n    \"branding\": \"default\",\n    \"portal\": \"rdmp\"\n}"
								},
								"url": {
									"raw": "http://localhost:1500/user/login_local",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "1500",
									"path": [
										"user",
										"login_local"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Dashboard Types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has forms in response\", function () {",
											"    var jsonData = pm.response.json();",
											"     pm.expect(jsonData).to.have.property(\"dashboardTypes\");",
											"     pm.expect(jsonData.dashboardTypes.length).to.be.greaterThan(0)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Source",
										"value": "jsclient",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/dashboard/type",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"dashboard",
										"type"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Dashboard Type Standard",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has name property\", function () {",
											"    var jsonData = pm.response.json();",
											"     pm.expect(jsonData).to.have.property(\"name\");",
											"     pm.expect(jsonData).to.have.property(\"formatRules\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Source",
										"value": "jsclient",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/dashboard/type/standard",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"dashboard",
										"type",
										"standard"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Dashboard Type Workspace",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has name property\", function () {",
											"    var jsonData = pm.response.json();",
											"     pm.expect(jsonData).to.have.property(\"name\");",
											"     pm.expect(jsonData).to.have.property(\"formatRules\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Source",
										"value": "jsclient",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/dashboard/type/workspace",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"dashboard",
										"type",
										"workspace"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Dashboard Type Consolidated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has name property\", function () {",
											"    var jsonData = pm.response.json();",
											"     pm.expect(jsonData).to.have.property(\"name\");",
											"     pm.expect(jsonData).to.have.property(\"formatRules\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Source",
										"value": "jsclient",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/dashboard/type/consolidated",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"dashboard",
										"type",
										"consolidated"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dashboard List RDMP Records",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Number of items returned in results array equals totalItems or 10\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    var numFound = jsonData.totalItems;",
											"    ",
											"    if(numFound < 10) {",
											"        pm.expect(jsonData.items.length).to.eql(numFound);",
											"    } else {",
											"        pm.expect(jsonData.items.length).to.eql(10);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Source",
										"value": "jsclient",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/listRecords?recordType=rdmp&state=draft&sort=\"lastSaveDate\":-1&start=0&rows=10",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"listRecords"
									],
									"query": [
										{
											"key": "recordType",
											"value": "rdmp"
										},
										{
											"key": "state",
											"value": "draft"
										},
										{
											"key": "sort",
											"value": "\"lastSaveDate\":-1"
										},
										{
											"key": "start",
											"value": "0"
										},
										{
											"key": "rows",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get view form config for RDMP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"RDMP form name is default-1.0-draft\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    var numFound = jsonData.totalItems;",
											"    pm.expect(jsonData.name).to.eql(\"default-1.0-draft\");",
											"});",
											"",
											"pm.test(\"Fields array has values\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    var numFound = jsonData.totalItems;",
											"    pm.expect(jsonData.fields).to.be.an('array').that.is.not.empty",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Source",
										"value": "jsclient",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/record/form/auto/{{dmpOid}}?edit=false",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"record",
										"form",
										"auto",
										"{{dmpOid}}"
									],
									"query": [
										{
											"key": "edit",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get edit form config for RDMP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"RDMP form name is default-1.0-draft\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    var numFound = jsonData.totalItems;",
											"    pm.expect(jsonData.name).to.eql(\"default-1.0-draft\");",
											"});",
											"",
											"pm.test(\"Fields array has values\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    var numFound = jsonData.totalItems;",
											"    pm.expect(jsonData.fields).to.be.an('array').that.is.not.empty",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Source",
										"type": "text",
										"value": "jsclient"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/record/form/auto/{{dmpOid}}?edit=true",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"record",
										"form",
										"auto",
										"{{dmpOid}}"
									],
									"query": [
										{
											"key": "edit",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update RDMP Metadata using AJAX form call",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "http://localhost:1500"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "http://localhost:1500/default/rdmp/record/edit/{{dmpOid}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Andrew's Postman test - Updated from form AJAX call\",\n    \"dc:identifier\": \"http://purl.org/au-research/grants/nhmrc/566728\",\n    \"description\": \"Movement of molecules within cells by a process known as membrane transport is critical for normal cell function and also exploited by bacteria to promote infection. The pathway that connects the import pathway to the export pathway is essential for the function of a large number of proteins, however this connecting pathway is poorly characterised. This study will define the machinery of this trafficking pathway, which will provide the ability to modulate biological processes and cytotoxicity.\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"contributor_ci\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributors\": [\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n        }\n    ],\n    \"vivo:Dataset_redbox:DataCollectionMethodology\": \"The data collection methodology\",\n    \"vivo:Dataset_dc_format\": \"xls\",\n    \"vivo:Dataset_dc:location_rdf:PlainLiteral\": \"eResearch Store network drive\",\n    \"vivo:Dataset_dc:source_dc:location_rdf:PlainLiteral\": \"shared university network drive (e.g. G, H, etc)\",\n    \"vivo:Dataset_dc:extent\": \"100GB - 2TB\",\n    \"redbox:retentionPeriod_dc:date\": \"1year\",\n    \"dc:rightsHolder_dc:name\": \"myUni\",\n    \"dc:accessRights\": \"permission from the data manager\",\n    \"authorization\": []\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/recordmeta/{{dmpOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"recordmeta",
										"{{dmpOid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get RDMP transfer responsibility configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Contains valid config with fields and canEdit object\", function () {",
											"    var jsonData = pm.response.json();",
											"   ",
											"        pm.expect(jsonData).to.have.property('fields');",
											"        pm.expect(jsonData).to.have.property('canEdit');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/transfer/rdmp"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/transferconfig/rdmp",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"transferconfig",
										"rdmp"
									]
								}
							},
							"response": []
						},
						{
							"name": "Transfer responsibility of plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// \"contributor_ci\": {",
											"                    // \"text_full_name\": \"Alberto Zweinstein\",",
											"                    ",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"CI has been updated\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].record.metadata.contributor_ci.text_full_name).to.eq(\"Alberto Zweinstein\");",
											"});",
											"",
											"pm.test(\"CI has been added to editPending array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].record.authorization.editPending).to.contain(\"alberto.zweinstein@example.edu.au\");",
											"    ",
											"});",
											"",
											"pm.test(\"CI has been added to viewPending array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[0].record.authorization.viewPending).to.contain(\"alberto.zweinstein@example.edu.au\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/transfer/rdmp"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"records\": [\n    {\n      \"oid\": \"{{dmpOid}}\"\n    }\n  ],\n  \"role\": \"chiefInvestigator\",\n  \"updateData\": {\n    \"text_full_name\": \"Alberto Zweinstein\",\n    \"storage_id\": \"23c3f253fa53809e2d986e69e2537de8\",\n    \"email\": \"alberto.zweinstein@example.edu.au\",\n    \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n    \"given_name\": \"Alberto\",\n    \"family_name\": \"Zweinstein\",\n    \"honorific\": \"Dr\",\n    \"full_name_family_name_first\": \"Zweinstein, Alberto\"\n  }\n}"
								},
								"url": {
									"raw": "http://localhost:1500/default/rdmp/record/responsibility/update",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "1500",
									"path": [
										"default",
										"rdmp",
										"record",
										"responsibility",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new researcher user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check response status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(true);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/admin/users"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{researcherUsername}}\",\n    \"details\": {\n        \"name\": \"A dummy researcher\",\n        \"email\": \"{{researcherEmail}}\",\n        \"password\": \"{{researcherPassword}}\",\n        \"roles\": [\n            \"Researcher\",\n            \"Guest\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/admin/users/newUser",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"admin",
										"users",
										"newUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "Try to create same researcher user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check response status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(false);",
											"});",
											"",
											"pm.test(\"Check response message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"Username already exists\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/admin/users"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{researcherUsername}}\",\n    \"details\": {\n        \"name\": \"A dummy researcher\",\n        \"email\": \"{{researcherEmail}}\",\n        \"password\": \"`{{ researcherPassword }}\",\n        \"roles\": [\n            \"Researcher\",\n            \"Guest\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/admin/users/newUser",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"admin",
										"users",
										"newUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list of users and find new researcher user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check response is an array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an.instanceof(Array);",
											"});",
											"",
											"pm.test(\"Check researcheruser is in the array\", function () {",
											"    var jsonData = pm.response.json();",
											"    var found = false;",
											"    for(var i=0; i< jsonData.length; i++) {",
											"        if(_.startsWith(jsonData[i].username, \"researcheruser\")) {",
											"            found = true;",
											"            postman.setEnvironmentVariable(\"researcherUserId\", jsonData[i].id);",
											"            break;",
											"        }",
											"    }",
											"    pm.expect(found).to.eq(true);",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "http://localhost:1500/default/rdmp/admin/users"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/admin/users/get",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"admin",
										"users",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate API key for new researcher user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check response status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(true);",
											"});",
											"",
											"pm.test(\"Check for API Key\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('message');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/admin/users"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"userid\": \"{{researcherUserId}}\"}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/admin/users/genKey",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"admin",
										"users",
										"genKey"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update researcher user's password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check response status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(true);",
											"});",
											"",
											"pm.test(\"Check response message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"User updated successfully\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/admin/users"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userid\": \"{{researcherUserId}}\",\n    \"details\": {\n        \"name\": \"A dummy researcher\",\n        \"email\": \"{{researcherEmail}}\",\n        \"password\": \"{{researcherPassword}}\",\n        \"roles\": [\n            \"Researcher\",\n            \"Guest\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/admin/users/update",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"admin",
										"users",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add librarian role to researcher user from the user management page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check response status\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.status).to.eql(true);",
											"});",
											"",
											"pm.test(\"Check response message\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"User updated successfully\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/admin/users"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userid\": \"{{researcherUserId}}\",\n    \"details\": {\n        \"name\": \"A dummy researcher\",\n        \"email\": \"{{researcherEmail}}\",\n        \"password\": \"{{researcherPassword}}\",\n        \"roles\": [\n            \"Librarians\",\n            \"Researcher\",\n            \"Guest\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/admin/users/update",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"admin",
										"users",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list of users and roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Check that researcher user has guest, researcher and librarian roles\", function(){",
											"    var researchUserRoles = [];",
											"    var jsonData = pm.response.json();",
											"    for(var i=0; i< jsonData.length; i++) {",
											"        var role = jsonData[i];",
											"        for(var j=0; j< role.users.length; j++) {",
											"            if(role.users[j].id == pm.environment.get(\"researcherUserId\")) {",
											"                researchUserRoles.push(role.name);",
											"            }",
											"        }",
											"    }",
											"    ",
											"    pm.expect(researchUserRoles).to.contain(\"Researcher\");",
											"    pm.expect(researchUserRoles).to.contain(\"Guest\");",
											"    pm.expect(researchUserRoles).to.contain(\"Librarians\");",
											"    pm.expect(researchUserRoles).to.not.contain(\"Admin\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/admin/roles"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/admin/roles/get",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"admin",
										"roles",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Librarian role from Researcher User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/admin/roles"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userid\": \"{{researcherUserId}}\",\n    \"roles\": [\n        \"Researcher\",\n        \"Guest\"\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/admin/roles/user",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"admin",
										"roles",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list of users and roles - Check researcher user no longer has librarian role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Check that researcher user has guest and researcher roles\", function(){",
											"    var researchUserRoles = [];",
											"    var jsonData = pm.response.json();",
											"    for(var i=0; i< jsonData.length; i++) {",
											"        var role = jsonData[i];",
											"        for(var j=0; j< role.users.length; j++) {",
											"            if(role.users[j].id == pm.environment.get(\"researcherUserId\")) {",
											"                researchUserRoles.push(role.name);",
											"            }",
											"        }",
											"    }",
											"    ",
											"    pm.expect(researchUserRoles).to.contain(\"Researcher\");",
											"    pm.expect(researchUserRoles).to.contain(\"Guest\");",
											"    pm.expect(researchUserRoles).to.not.contain(\"Librarians\");",
											"    pm.expect(researchUserRoles).to.not.contain(\"Admin\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/admin/roles"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/admin/roles/get",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"admin",
										"roles",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Export RDMP Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const parse = require('csv-parse/lib/sync'),",
											"    parsedCSV = parse(responseBody, {relax_column_count: true});",
											"    ",
											"pm.test(\"Correct CSV response\", function () {",
											"    // Check that we have at least 2 two (header + row)",
											"    pm.expect(parsedCSV).to.have.length.above(1);",
											"    ",
											"});",
											"",
											"pm.test(\"CSV contains Test record\", function () {",
											"    var found = false;",
											"    const head = parsedCSV.shift(),",
											"        title = head.indexOf('redboxOid');",
											"   parsedCSV.forEach(function(row) {",
											"       if(row[title] == pm.environment.get('dmpOid')) {",
											"           found = true;",
											"       }",
											"   });",
											"   ",
											"   pm.expect(found).to.eq(true);",
											"  ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/export"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/export/record/download/csv?before=&after=&recType=rdmp",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"export",
										"record",
										"download",
										"csv"
									],
									"query": [
										{
											"key": "before",
											"value": ""
										},
										{
											"key": "after",
											"value": ""
										},
										{
											"key": "recType",
											"value": "rdmp"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create data record via form",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test oid exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"    postman.setEnvironmentVariable(\"dataRecordOid\", jsonData.oid);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}{/default/rdmp/record/dataRecord/edit"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameterRetriever\": \"\",\n    \"rdmpGetter\": \"\",\n    \"\": {},\n    \"rdmp\": {\n        \"oid\": \"{{dmpOid}}\",\n        \"title\": \"Andrew's Postman test - Updated from form AJAX call\"\n    },\n    \"aim_project_name\": \"Andrew's Postman test - Updated from form AJAX call\",\n    \"foaf:fundedBy_foaf:Agent\": [\n        \"\"\n    ],\n    \"dc:coverage_vivo:DateTimeInterval_vivo:end\": \"\",\n    \"foaf:fundedBy_vivo:Grant\": [\n        \"\"\n    ],\n    \"dc:subject_anzsrc:for\": [\n        {\n            \"name\": \"01 - MATHEMATICAL SCIENCES\",\n            \"label\": \"MATHEMATICAL SCIENCES\",\n            \"notation\": \"01\"\n        }\n    ],\n    \"dc:subject_anzsrc:seo\": [],\n    \"title\": \"A Data record\",\n    \"description\": \"Data record\",\n    \"datatype\": \"collection\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"contributor_ci\": {\n        \"text_full_name\": \"Alberto Zweinstein\",\n        \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n        \"email\": \"alberto.zweinstein@example.edu.au\",\n        \"given_name\": \"Alberto\",\n        \"family_name\": \"Zweinstein\",\n        \"honorific\": \"Dr\",\n        \"full_name_family_name_first\": \"Zweinstein, Alberto\",\n        \"username\": \"\",\n        \"role\": \"Chief Investigator\",\n        \"orcid\": null\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"username\": \"\",\n        \"role\": \"Data manager\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributors\": [\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"username\": \"\",\n            \"role\": \"Contributors\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n        }\n    ],\n    \"contributor_supervisor\": {\n        \"text_full_name\": null,\n        \"full_name_honorific\": \"\",\n        \"email\": null,\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Supervisor\",\n        \"orcid\": null\n    },\n    \"dataowner_name\": \"Alberto Zweinstein\",\n    \"dataowner_email\": \"alberto.zweinstein@example.edu.au\",\n    \"redbox:retentionPeriod_dc:date\": \"1year\",\n    \"redbox:retentionPeriod_dc:date_skos:note\": \"\",\n    \"disposalDate\": \"\",\n    \"related_publications\": [\n        {\n            \"related_url\": \"\",\n            \"related_title\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"dataLocations\": [],\n    \"software_equipment\": \"\"\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/recordmeta/dataRecord",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"recordmeta",
										"dataRecord"
									]
								}
							},
							"response": []
						},
						{
							"name": "First Phase of attachment upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    var location = postman.getResponseHeader(\"Location\");",
											"    postman.setEnvironmentVariable(\"attachmentLocation\", location );",
											"    postman.setEnvironmentVariable(\"attachmentId\", location.split(\"/\")[8] );",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Upload-Length",
										"value": "194397"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "Tus-Resumable",
										"value": "1.0.0"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Content-Length",
										"value": "0"
									},
									{
										"key": "Upload-Metadata",
										"value": "name U2NyZWVuIFNob3QgMjAxOC0xMS0yNiBhdCAyLjM0LjI2IHBtLnBuZw==,type aW1hZ2UvcG5n"
									},
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/record/{{dataRecordOid}}/attach",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"record",
										"{{dataRecordOid}}",
										"attach"
									]
								}
							},
							"response": []
						},
						{
							"name": "Second Phase of attachment upload",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "Tus-Resumable",
										"value": "1.0.0"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/offset+octet-stream",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/edit/b869b4fae83a1f01082465d165d868a8"
									},
									{
										"key": "Upload-Offset",
										"value": "0"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "test/postman/attachment.png"
									}
								},
								"url": {
									"raw": "http:{{attachmentLocation}}",
									"host": [
										"http"
									],
									"port": "{{attachmentLocation}}"
								}
							},
							"response": []
						},
						{
							"name": "Save attachment on Data Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/edit/{{dataRecordOid}}"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameterRetriever\": \"\",\n    \"rdmpGetter\": \"\",\n    \"\": {},\n    \"rdmp\": {\n        \"oid\": \"{{dmpOid}}\",\n        \"title\": \"Andrew's Postman test - Updated from form AJAX call\"\n    },\n    \"aim_project_name\": \"Andrew's Postman test - Updated from form AJAX call\",\n    \"foaf:fundedBy_foaf:Agent\": [\n        \"\"\n    ],\n    \"dc:coverage_vivo:DateTimeInterval_vivo:end\": \"\",\n    \"foaf:fundedBy_vivo:Grant\": [\n        \"\"\n    ],\n    \"dc:subject_anzsrc:for\": [\n        {\n            \"name\": \"01 - MATHEMATICAL SCIENCES\",\n            \"label\": \"MATHEMATICAL SCIENCES\",\n            \"notation\": \"01\"\n        }\n    ],\n    \"dc:subject_anzsrc:seo\": [],\n    \"title\": \"A Data record\",\n    \"description\": \"Data record\",\n    \"datatype\": \"collection\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"contributor_ci\": {\n        \"text_full_name\": \"Alberto Zweinstein\",\n        \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n        \"email\": \"alberto.zweinstein@example.edu.au\",\n        \"given_name\": \"Alberto\",\n        \"family_name\": \"Zweinstein\",\n        \"honorific\": \"Dr\",\n        \"full_name_family_name_first\": \"Zweinstein, Alberto\",\n        \"username\": \"\",\n        \"role\": \"Chief Investigator\",\n        \"orcid\": null\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Data manager\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributors\": [\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"full_name_honorific\": \"\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"given_name\": \"\",\n            \"family_name\": \"\",\n            \"honorific\": \"\",\n            \"full_name_family_name_first\": \"\",\n            \"username\": \"\",\n            \"role\": \"Contributors\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n        }\n    ],\n    \"contributor_supervisor\": {\n        \"text_full_name\": \"\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"\",\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Supervisor\",\n        \"orcid\": null\n    },\n    \"dataowner_name\": \"Alberto Zweinstein\",\n    \"dataowner_email\": \"alberto.zweinstein@example.edu.au\",\n    \"redbox:retentionPeriod_dc:date\": \"1year\",\n    \"redbox:retentionPeriod_dc:date_skos:note\": \"\",\n    \"disposalDate\": \"\",\n    \"related_publications\": [\n        {\n            \"related_url\": \"\",\n            \"related_title\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"dataLocations\": [\n        {\n            \"type\": \"attachment\",\n            \"location\": \"{{dataRecordOid}}/attach/{{attachmentId}}\",\n            \"mimeType\": \"image/png\",\n            \"name\": \"Screen Shot 2018-11-26 at 3.39.48 pm.png\",\n            \"fileId\": \"{{attachmentId}}\",\n            \"uploadUrl\": \"http:{{attachmentLocation}}\"\n        }\n    ],\n    \"software_equipment\": \"\"\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/recordmeta/{{dataRecordOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"recordmeta",
										"{{dataRecordOid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Download attachment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http:{{attachmentLocation}}",
									"host": [
										"http"
									],
									"port": "{{attachmentLocation}}"
								}
							},
							"response": []
						},
						{
							"name": "Get all Record Types Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Reponse is an array with more than one result\", function () {",
											"    ",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/search?q=Record"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/record/type/",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"record",
										"type",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get DataRecord Type info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response is correct package type\", function () {",
											"     var jsonData = pm.response.json();",
											"     pm.expect(jsonData.packageType).to.eql(\"dataRecord\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/search?q=Record"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/record/type/dataRecord",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"record",
										"type",
										"dataRecord"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get DataPublication Workflow Steps",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response contains 5 steps\", function () {",
											"     var jsonData = pm.response.json();",
											"     pm.expect(jsonData.length).to.eql(5);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/search?q=Record"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/record/wfSteps/dataPublication",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"record",
										"wfSteps",
										"dataPublication"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create data publication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test oid exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"    postman.setEnvironmentVariable(\"dataPublicationOid\", jsonData.oid);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/dataPublication/edit"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameterRetriever\": \"\",\n    \"dataRecordGetter\": \"\",\n    \"\": {},\n    \"dataRecord\": {\n        \"oid\": \"{{dataRecordOid}}\",\n        \"title\": \"A Data record\"\n    },\n    \"title\": \"A Data record\",\n    \"description\": \"Data record\",\n    \"datatype\": \"collection\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"foaf:fundedBy_foaf:Agent\": [\n        {}\n    ],\n    \"foaf:fundedBy_vivo:Grant\": [\n        {}\n    ],\n    \"dc:subject_anzsrc:for\": [\n        {\n            \"name\": \"01 - MATHEMATICAL SCIENCES\",\n            \"label\": \"MATHEMATICAL SCIENCES\",\n            \"notation\": \"01\"\n        }\n    ],\n    \"dc:subject_anzsrc:seo\": [],\n    \"startDate\": \"\",\n    \"endDate\": \"\",\n    \"timePeriod\": \"\",\n    \"geolocations\": [\n        \"\"\n    ],\n    \"geospatial\": {},\n    \"accessRightsToggle\": \"\",\n    \"dataLocations\": [\n        {\n            \"type\": \"attachment\",\n            \"location\": \"b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"mimeType\": \"image/png\",\n            \"name\": \"Screen Shot 2018-11-26 at 3.39.48 pm.png\",\n            \"fileId\": \"d3de61376e5bc93c814607ee604ebac5\",\n            \"uploadUrl\": \"http://localhost:1500/default/rdmp/record/b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"selected\": true\n        }\n    ],\n    \"dataLicensingAccess_manager\": \"Prof Paul Gleeson\",\n    \"dc:accessRights\": \"Open\",\n    \"accessRights_url\": \"\",\n    \"related_publications\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_websites\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_metadata\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_data\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_services\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"license_identifier\": \"\",\n    \"license_notes\": \"\",\n    \"license_other_url\": \"\",\n    \"license_statement\": \"Copyright ReDBox Research Data 2018\",\n    \"license_statement_url\": \"\",\n    \"citation_doi\": \"\",\n    \"requestIdentifier\": [],\n    \"citation_title\": \"A Data Record\",\n    \"creators\": [\n        {\n            \"text_full_name\": \"Alberto Zweinstein\",\n            \"email\": \"alberto.zweinstein@example.edu.au\",\n            \"role\": \"Chief Investigator\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"Zweinstein\",\n            \"given_name\": \"Alberto\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Data manager\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Contributors\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": null,\n            \"email\": null,\n            \"role\": \"Supervisor\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"\",\n            \"given_name\": \"\"\n        }\n    ],\n    \"citation_publisher\": \"ReDBox Research Data\",\n    \"citation_url\": \"\",\n    \"citation_publication_date\": \"\",\n    \"citation_generated\": \"Zweinstein, Alberto; Paul Gleeson, Prof; Paul Gleeson, Prof (Invalid date): A Data Record. ReDBox Research Data. {ID_WILL_BE_HERE}\",\n    \"dataowner_name\": \"Alberto Zweinstein\",\n    \"dataowner_email\": \"alberto.zweinstein@example.edu.au\",\n    \"contributor_ci\": {\n        \"text_full_name\": \"Alberto Zweinstein\",\n        \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n        \"email\": \"alberto.zweinstein@example.edu.au\",\n        \"given_name\": \"Alberto\",\n        \"family_name\": \"Zweinstein\",\n        \"honorific\": \"Dr\",\n        \"full_name_family_name_first\": \"Zweinstein, Alberto\",\n        \"username\": \"\",\n        \"role\": \"Chief Investigator\"\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"given_name\": \"Prof\",\n        \"family_name\": \"Paul Gleeson\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"Paul Gleeson, Prof\",\n        \"username\": \"\",\n        \"role\": \"Data manager\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributor_supervisor\": {\n        \"text_full_name\": \"\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"\",\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Supervisor\"\n    },\n    \"embargoByDate\": \"\",\n    \"embargoUntil\": null,\n    \"embargoNote\": \"\",\n    \"reviewerNote\": \"\",\n    \"ckanLocation\": \"\"\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/recordmeta/dataPublication",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"recordmeta",
										"dataPublication"
									]
								}
							},
							"response": []
						},
						{
							"name": "Migrate data publication to reviewing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test oid exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/edit/49a33460c794498a56fa29ed08567cc4"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameterRetriever\": \"\",\n    \"dataRecordGetter\": \"\",\n    \"\": {},\n    \"dataRecord\": {\n        \"oid\": \"{{dataRecordOid}}\",\n        \"title\": \"A Data record\"\n    },\n    \"title\": \"A Data record\",\n    \"description\": \"Data record\",\n    \"datatype\": \"collection\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"foaf:fundedBy_foaf:Agent\": [\n        {}\n    ],\n    \"foaf:fundedBy_vivo:Grant\": [\n        {}\n    ],\n    \"dc:subject_anzsrc:for\": [\n        {\n            \"name\": \"01 - MATHEMATICAL SCIENCES\",\n            \"label\": \"MATHEMATICAL SCIENCES\",\n            \"notation\": \"01\"\n        }\n    ],\n    \"dc:subject_anzsrc:seo\": [],\n    \"startDate\": \"\",\n    \"endDate\": \"\",\n    \"timePeriod\": \"\",\n    \"geolocations\": [\n        \"\"\n    ],\n    \"geospatial\": {},\n    \"accessRightsToggle\": \"\",\n    \"dataLocations\": [\n        {\n            \"type\": \"attachment\",\n            \"location\": \"b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"mimeType\": \"image/png\",\n            \"name\": \"Screen Shot 2018-11-26 at 3.39.48 pm.png\",\n            \"fileId\": \"d3de61376e5bc93c814607ee604ebac5\",\n            \"uploadUrl\": \"http://localhost:1500/default/rdmp/record/b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"selected\": true\n        }\n    ],\n    \"dataLicensingAccess_manager\": \"Prof Paul Gleeson\",\n    \"dc:accessRights\": \"Open\",\n    \"accessRights_url\": \"\",\n    \"related_publications\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_websites\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_metadata\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_data\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_services\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"license_identifier\": \"\",\n    \"license_notes\": \"\",\n    \"license_other_url\": \"\",\n    \"license_statement\": \"Copyright ReDBox Research Data 2018\",\n    \"license_statement_url\": \"\",\n    \"citation_doi\": \"\",\n    \"requestIdentifier\": [],\n    \"citation_title\": \"A Data Record\",\n    \"creators\": [\n        {\n            \"text_full_name\": \"Alberto Zweinstein\",\n            \"email\": \"alberto.zweinstein@example.edu.au\",\n            \"role\": \"Chief Investigator\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"Zweinstein\",\n            \"given_name\": \"Alberto\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Data manager\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Contributors\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": null,\n            \"email\": null,\n            \"role\": \"Supervisor\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"\",\n            \"given_name\": \"\"\n        }\n    ],\n    \"citation_publisher\": \"ReDBox Research Data\",\n    \"citation_url\": \"\",\n    \"citation_publication_date\": \"\",\n    \"citation_generated\": \"Zweinstein, Alberto; Paul Gleeson, Prof; Paul Gleeson, Prof (Invalid date): A Data Record. ReDBox Research Data. {ID_WILL_BE_HERE}\",\n    \"dataowner_name\": \"Alberto Zweinstein\",\n    \"dataowner_email\": \"alberto.zweinstein@example.edu.au\",\n    \"contributor_ci\": {\n        \"text_full_name\": \"Alberto Zweinstein\",\n        \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n        \"email\": \"alberto.zweinstein@example.edu.au\",\n        \"given_name\": \"Alberto\",\n        \"family_name\": \"Zweinstein\",\n        \"honorific\": \"Dr\",\n        \"full_name_family_name_first\": \"Zweinstein, Alberto\",\n        \"username\": \"\",\n        \"role\": \"Chief Investigator\"\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"given_name\": \"Prof\",\n        \"family_name\": \"Paul Gleeson\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"Paul Gleeson, Prof\",\n        \"username\": \"\",\n        \"role\": \"Data manager\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributor_supervisor\": {\n        \"text_full_name\": \"\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"\",\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Supervisor\"\n    },\n    \"embargoByDate\": \"\",\n    \"embargoUntil\": null,\n    \"embargoNote\": \"\",\n    \"reviewerNote\": \"\",\n    \"ckanLocation\": \"\"\n}"
								},
								"url": {
									"raw": "http://localhost:1500/default/rdmp/recordmeta/{{dataPublicationOid}}?targetStep=reviewing",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "1500",
									"path": [
										"default",
										"rdmp",
										"recordmeta",
										"{{dataPublicationOid}}"
									],
									"query": [
										{
											"key": "targetStep",
											"value": "reviewing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Index",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has record array\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property(\"records\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/search?q=Record"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/record/search/rdmp/?searchStr=Andrew&facetNames=grant_number_name,finalKeywords,workflow_stageLabel",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"record",
										"search",
										"rdmp",
										""
									],
									"query": [
										{
											"key": "searchStr",
											"value": "Andrew"
										},
										{
											"key": "facetNames",
											"value": "grant_number_name,finalKeywords,workflow_stageLabel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Report",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"// pm.test(\"Has items array\", function () {",
											"//     var jsonData = pm.response.json();",
											"//     pm.expect(jsonData).to.have.property(\"items\");",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/search?q=Record"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/admin/getReportResults?name=rdmpRecords",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"admin",
										"getReportResults"
									],
									"query": [
										{
											"key": "name",
											"value": "rdmpRecords"
										}
									]
								}
							},
							"response": [
								{
									"name": "Report",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Pragma",
												"value": "no-cache"
											},
											{
												"key": "Accept-Encoding",
												"value": "gzip, deflate, br"
											},
											{
												"key": "X-CSRF-Token",
												"value": ""
											},
											{
												"key": "Accept-Language",
												"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
											},
											{
												"key": "User-Agent",
												"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
											},
											{
												"key": "Content-Type",
												"value": "application/json;charset=utf-8"
											},
											{
												"key": "Accept",
												"value": "application/json, text/plain, */*"
											},
											{
												"key": "Connection",
												"value": "keep-alive"
											},
											{
												"key": "Referer",
												"value": "{{host}}/default/rdmp/record/search?q=Record"
											},
											{
												"key": "Cookie",
												"value": ""
											},
											{
												"key": "X-Source",
												"value": "jsclient"
											},
											{
												"key": "Cache-Control",
												"value": "no-cache"
											}
										],
										"url": {
											"raw": "{{host}}/default/rdmp/admin/getReportResults?name=rdmpRecords&start=0&rows=10&dateObjectModifiedRange_fromDate=2021-04-30T14:00:00Z&dateObjectModifiedRange_toDate=2021-05-30T14:00:00Z",
											"host": [
												"{{host}}"
											],
											"path": [
												"default",
												"rdmp",
												"admin",
												"getReportResults"
											],
											"query": [
												{
													"key": "name",
													"value": "rdmpRecords"
												},
												{
													"key": "start",
													"value": "0"
												},
												{
													"key": "rows",
													"value": "10"
												},
												{
													"key": "dateObjectModifiedRange_fromDate",
													"value": "2021-04-30T14:00:00Z"
												},
												{
													"key": "dateObjectModifiedRange_toDate",
													"value": "2021-05-30T14:00:00Z"
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete the created data record",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=utf-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Referer",
										"value": "http://localhost:1500/default/rdmp/record/edit/ee3a12b7a95dd42619ebe16ecd2461f9"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/record/delete/{{dataRecordOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"record",
										"delete",
										"{{dataRecordOid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout Admin User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Upgrade-Insecure-Requests",
										"value": "1"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Accept",
										"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/researcher/home"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/user/logout",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"user",
										"logout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Guest User Tests",
					"item": [
						{
							"name": "Get view form config for RDMP - Unauthorised",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"pm.test(\"Message is access denied\", function () {",
											"    var jsonData = pm.response.json();",
											"    ",
											"    pm.expect(jsonData.message).to.eql(\"Access Denied\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Source",
										"value": "jsclient",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/record/form/auto/{{dmpOid}}?edit=false",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"record",
										"form",
										"auto",
										"{{dmpOid}}"
									],
									"query": [
										{
											"key": "edit",
											"value": "false"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Researcher User Tests",
					"item": [
						{
							"name": "Login via Internal authentication using researcheruser with invalid password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setGlobalVariable(\"cookie\",postman.getResponseHeader(\"set-cookie\") );",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Message is incorrect username/password\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.message).to.eql(\"Incorrect username/password\");",
											"});",
											"",
											"pm.test(\"User is false\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.user).to.eql(false);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/user/login"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{researcherUsername}}\",\n    \"password\": \"notthepassword\",\n    \"branding\": \"default\",\n    \"portal\": \"rdmp\"\n}"
								},
								"url": {
									"raw": "http://localhost:1500/user/login_local",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "1500",
									"path": [
										"user",
										"login_local"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login via Internal authentication using researcher data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setGlobalVariable(\"cookie\",postman.getResponseHeader(\"set-cookie\") );",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check that we have logged in correctly.\", function () {",
											"    var jsonData = pm.response.json();",
											"    var researcherUsername = pm.environment.get(\"researcherUsername\");",
											"    pm.expect(jsonData.user.username).to.eql(researcherUsername);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/user/login"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{researcherUsername}}\",\n    \"password\": \"{{researcherPassword}}\",\n    \"branding\": \"default\",\n    \"portal\": \"rdmp\"\n}"
								},
								"url": {
									"raw": "http://localhost:1500/user/login_local",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "1500",
									"path": [
										"user",
										"login_local"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create data record via form",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test oid exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"    postman.setEnvironmentVariable(\"dataRecordOid\", jsonData.oid);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}{/default/rdmp/record/dataRecord/edit"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameterRetriever\": \"\",\n    \"rdmpGetter\": \"\",\n    \"\": {},\n    \"rdmp\": {\n        \"oid\": \"{{dmpOid}}\",\n        \"title\": \"Andrew's Postman test - Updated from form AJAX call\"\n    },\n    \"aim_project_name\": \"Andrew's Postman test - Updated from form AJAX call\",\n    \"foaf:fundedBy_foaf:Agent\": [\n        \"\"\n    ],\n    \"dc:coverage_vivo:DateTimeInterval_vivo:end\": \"\",\n    \"foaf:fundedBy_vivo:Grant\": [\n        \"\"\n    ],\n    \"dc:subject_anzsrc:for\": [\n        {\n            \"name\": \"01 - MATHEMATICAL SCIENCES\",\n            \"label\": \"MATHEMATICAL SCIENCES\",\n            \"notation\": \"01\"\n        }\n    ],\n    \"dc:subject_anzsrc:seo\": [],\n    \"title\": \"A Data record - researcher\",\n    \"description\": \"Data record\",\n    \"datatype\": \"collection\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"contributor_ci\": {\n        \"text_full_name\": \"Alberto Zweinstein\",\n        \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n        \"email\": \"alberto.zweinstein@example.edu.au\",\n        \"given_name\": \"Alberto\",\n        \"family_name\": \"Zweinstein\",\n        \"honorific\": \"Dr\",\n        \"full_name_family_name_first\": \"Zweinstein, Alberto\",\n        \"username\": \"\",\n        \"role\": \"Chief Investigator\",\n        \"orcid\": null\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"username\": \"\",\n        \"role\": \"Data manager\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributors\": [\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"username\": \"\",\n            \"role\": \"Contributors\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n        }\n    ],\n    \"contributor_supervisor\": {\n        \"text_full_name\": null,\n        \"full_name_honorific\": \"\",\n        \"email\": null,\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Supervisor\",\n        \"orcid\": null\n    },\n    \"dataowner_name\": \"Alberto Zweinstein\",\n    \"dataowner_email\": \"alberto.zweinstein@example.edu.au\",\n    \"redbox:retentionPeriod_dc:date\": \"1year\",\n    \"redbox:retentionPeriod_dc:date_skos:note\": \"\",\n    \"disposalDate\": \"\",\n    \"related_publications\": [\n        {\n            \"related_url\": \"\",\n            \"related_title\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"dataLocations\": [],\n    \"software_equipment\": \"\"\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/recordmeta/dataRecord",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"recordmeta",
										"dataRecord"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create data publication",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test oid exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"    postman.setEnvironmentVariable(\"dataPublicationOid\", jsonData.oid);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "X-CSRF-Token",
										"value": ""
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/dataPublication/edit"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameterRetriever\": \"\",\n    \"dataRecordGetter\": \"\",\n    \"\": {},\n    \"dataRecord\": {\n        \"oid\": \"{{dataRecordOid}}\",\n        \"title\": \"A Data record\"\n    },\n    \"title\": \"A Data record\",\n    \"description\": \"Data record\",\n    \"datatype\": \"collection\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"foaf:fundedBy_foaf:Agent\": [\n        {}\n    ],\n    \"foaf:fundedBy_vivo:Grant\": [\n        {}\n    ],\n    \"dc:subject_anzsrc:for\": [\n        {\n            \"name\": \"01 - MATHEMATICAL SCIENCES\",\n            \"label\": \"MATHEMATICAL SCIENCES\",\n            \"notation\": \"01\"\n        }\n    ],\n    \"dc:subject_anzsrc:seo\": [],\n    \"startDate\": \"\",\n    \"endDate\": \"\",\n    \"timePeriod\": \"\",\n    \"geolocations\": [\n        \"\"\n    ],\n    \"geospatial\": {},\n    \"accessRightsToggle\": \"\",\n    \"dataLocations\": [\n        {\n            \"type\": \"attachment\",\n            \"location\": \"b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"mimeType\": \"image/png\",\n            \"name\": \"Screen Shot 2018-11-26 at 3.39.48 pm.png\",\n            \"fileId\": \"d3de61376e5bc93c814607ee604ebac5\",\n            \"uploadUrl\": \"http://localhost:1500/default/rdmp/record/b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"selected\": true\n        }\n    ],\n    \"dataLicensingAccess_manager\": \"Prof Paul Gleeson\",\n    \"dc:accessRights\": \"Open\",\n    \"accessRights_url\": \"\",\n    \"related_publications\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_websites\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_metadata\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_data\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_services\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"license_identifier\": \"\",\n    \"license_notes\": \"\",\n    \"license_other_url\": \"\",\n    \"license_statement\": \"Copyright ReDBox Research Data 2018\",\n    \"license_statement_url\": \"\",\n    \"citation_doi\": \"\",\n    \"requestIdentifier\": [],\n    \"citation_title\": \"A Data Record\",\n    \"creators\": [\n        {\n            \"text_full_name\": \"Alberto Zweinstein\",\n            \"email\": \"alberto.zweinstein@example.edu.au\",\n            \"role\": \"Chief Investigator\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"Zweinstein\",\n            \"given_name\": \"Alberto\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Data manager\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Contributors\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": null,\n            \"email\": null,\n            \"role\": \"Supervisor\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"\",\n            \"given_name\": \"\"\n        }\n    ],\n    \"citation_publisher\": \"ReDBox Research Data\",\n    \"citation_url\": \"\",\n    \"citation_publication_date\": \"\",\n    \"citation_generated\": \"Zweinstein, Alberto; Paul Gleeson, Prof; Paul Gleeson, Prof (Invalid date): A Data Record. ReDBox Research Data. {ID_WILL_BE_HERE}\",\n    \"dataowner_name\": \"Alberto Zweinstein\",\n    \"dataowner_email\": \"alberto.zweinstein@example.edu.au\",\n    \"contributor_ci\": {\n        \"text_full_name\": \"Alberto Zweinstein\",\n        \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n        \"email\": \"alberto.zweinstein@example.edu.au\",\n        \"given_name\": \"Alberto\",\n        \"family_name\": \"Zweinstein\",\n        \"honorific\": \"Dr\",\n        \"full_name_family_name_first\": \"Zweinstein, Alberto\",\n        \"username\": \"\",\n        \"role\": \"Chief Investigator\"\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"given_name\": \"Prof\",\n        \"family_name\": \"Paul Gleeson\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"Paul Gleeson, Prof\",\n        \"username\": \"\",\n        \"role\": \"Data manager\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributor_supervisor\": {\n        \"text_full_name\": \"\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"\",\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Supervisor\"\n    },\n    \"embargoByDate\": \"\",\n    \"embargoUntil\": null,\n    \"embargoNote\": \"\",\n    \"reviewerNote\": \"\",\n    \"ckanLocation\": \"\"\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/recordmeta/dataPublication",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"recordmeta",
										"dataPublication"
									]
								}
							},
							"response": []
						},
						{
							"name": "Migrate data publication to reviewing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Test oid exists\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.have.property('oid');",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "{{host}}"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/record/edit/49a33460c794498a56fa29ed08567cc4"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameterRetriever\": \"\",\n    \"dataRecordGetter\": \"\",\n    \"\": {},\n    \"dataRecord\": {\n        \"oid\": \"{{dataRecordOid}}\",\n        \"title\": \"A Data record\"\n    },\n    \"title\": \"A Data record\",\n    \"description\": \"Data record\",\n    \"datatype\": \"collection\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"foaf:fundedBy_foaf:Agent\": [\n        {}\n    ],\n    \"foaf:fundedBy_vivo:Grant\": [\n        {}\n    ],\n    \"dc:subject_anzsrc:for\": [\n        {\n            \"name\": \"01 - MATHEMATICAL SCIENCES\",\n            \"label\": \"MATHEMATICAL SCIENCES\",\n            \"notation\": \"01\"\n        }\n    ],\n    \"dc:subject_anzsrc:seo\": [],\n    \"startDate\": \"\",\n    \"endDate\": \"\",\n    \"timePeriod\": \"\",\n    \"geolocations\": [\n        \"\"\n    ],\n    \"geospatial\": {},\n    \"accessRightsToggle\": \"\",\n    \"dataLocations\": [\n        {\n            \"type\": \"attachment\",\n            \"location\": \"b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"mimeType\": \"image/png\",\n            \"name\": \"Screen Shot 2018-11-26 at 3.39.48 pm.png\",\n            \"fileId\": \"d3de61376e5bc93c814607ee604ebac5\",\n            \"uploadUrl\": \"http://localhost:1500/default/rdmp/record/b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"selected\": true\n        }\n    ],\n    \"dataLicensingAccess_manager\": \"Prof Paul Gleeson\",\n    \"dc:accessRights\": \"Open\",\n    \"accessRights_url\": \"\",\n    \"related_publications\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_websites\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_metadata\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_data\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_services\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"license_identifier\": \"\",\n    \"license_notes\": \"\",\n    \"license_other_url\": \"\",\n    \"license_statement\": \"Copyright ReDBox Research Data 2018\",\n    \"license_statement_url\": \"\",\n    \"citation_doi\": \"\",\n    \"requestIdentifier\": [],\n    \"citation_title\": \"A Data Record\",\n    \"creators\": [\n        {\n            \"text_full_name\": \"Alberto Zweinstein\",\n            \"email\": \"alberto.zweinstein@example.edu.au\",\n            \"role\": \"Chief Investigator\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"Zweinstein\",\n            \"given_name\": \"Alberto\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Data manager\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Contributors\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": null,\n            \"email\": null,\n            \"role\": \"Supervisor\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"\",\n            \"given_name\": \"\"\n        }\n    ],\n    \"citation_publisher\": \"ReDBox Research Data\",\n    \"citation_url\": \"\",\n    \"citation_publication_date\": \"\",\n    \"citation_generated\": \"Zweinstein, Alberto; Paul Gleeson, Prof; Paul Gleeson, Prof (Invalid date): A Data Record. ReDBox Research Data. {ID_WILL_BE_HERE}\",\n    \"dataowner_name\": \"Alberto Zweinstein\",\n    \"dataowner_email\": \"alberto.zweinstein@example.edu.au\",\n    \"contributor_ci\": {\n        \"text_full_name\": \"Alberto Zweinstein\",\n        \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n        \"email\": \"alberto.zweinstein@example.edu.au\",\n        \"given_name\": \"Alberto\",\n        \"family_name\": \"Zweinstein\",\n        \"honorific\": \"Dr\",\n        \"full_name_family_name_first\": \"Zweinstein, Alberto\",\n        \"username\": \"\",\n        \"role\": \"Chief Investigator\"\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"given_name\": \"Prof\",\n        \"family_name\": \"Paul Gleeson\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"Paul Gleeson, Prof\",\n        \"username\": \"\",\n        \"role\": \"Data manager\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributor_supervisor\": {\n        \"text_full_name\": \"\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"\",\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Supervisor\"\n    },\n    \"embargoByDate\": \"\",\n    \"embargoUntil\": null,\n    \"embargoNote\": \"\",\n    \"reviewerNote\": \"\",\n    \"ckanLocation\": \"\"\n}"
								},
								"url": {
									"raw": "http://localhost:1500/default/rdmp/recordmeta/{{dataPublicationOid}}?targetStep=reviewing",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "1500",
									"path": [
										"default",
										"rdmp",
										"recordmeta",
										"{{dataPublicationOid}}"
									],
									"query": [
										{
											"key": "targetStep",
											"value": "reviewing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update data publication after in review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Record is now in review so the researcher should no longer be able to edit the record",
											"pm.test(\"Status code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Origin",
										"value": "http://localhost:1500"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "X-Source",
										"value": "jsclient"
									},
									{
										"key": "Content-Type",
										"value": "application/json;charset=UTF-8"
									},
									{
										"key": "Accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Referer",
										"value": "http://localhost:1500/default/rdmp/record/edit/{{dmpOid}}"
									},
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"parameterRetriever\": \"\",\n    \"dataRecordGetter\": \"\",\n    \"\": {},\n    \"dataRecord\": {\n        \"oid\": \"{{dataRecordOid}}\",\n        \"title\": \"A Data record\"\n    },\n    \"title\": \"A Data record - changed\",\n    \"description\": \"Data record\",\n    \"datatype\": \"collection\",\n    \"finalKeywords\": [\n        \"270199\",\n        \"Golgi apparatus\",\n        \"endocytosis\",\n        \"membrane transport\",\n        \"protein trafficking\",\n        \"secretion\",\n        \"HIV-AIDS\",\n        \"bacterial pathogen\",\n        \"hormone secretion\",\n        \"immune development\",\n        \"lysosomal storage disorder\"\n    ],\n    \"foaf:fundedBy_foaf:Agent\": [\n        {}\n    ],\n    \"foaf:fundedBy_vivo:Grant\": [\n        {}\n    ],\n    \"dc:subject_anzsrc:for\": [\n        {\n            \"name\": \"01 - MATHEMATICAL SCIENCES\",\n            \"label\": \"MATHEMATICAL SCIENCES\",\n            \"notation\": \"01\"\n        }\n    ],\n    \"dc:subject_anzsrc:seo\": [],\n    \"startDate\": \"\",\n    \"endDate\": \"\",\n    \"timePeriod\": \"\",\n    \"geolocations\": [\n        \"\"\n    ],\n    \"geospatial\": {},\n    \"accessRightsToggle\": \"\",\n    \"dataLocations\": [\n        {\n            \"type\": \"attachment\",\n            \"location\": \"b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"mimeType\": \"image/png\",\n            \"name\": \"Screen Shot 2018-11-26 at 3.39.48 pm.png\",\n            \"fileId\": \"d3de61376e5bc93c814607ee604ebac5\",\n            \"uploadUrl\": \"http://localhost:1500/default/rdmp/record/b869b4fae83a1f01082465d165d868a8/attach/d3de61376e5bc93c814607ee604ebac5\",\n            \"selected\": true\n        }\n    ],\n    \"dataLicensingAccess_manager\": \"Prof Paul Gleeson\",\n    \"dc:accessRights\": \"Open\",\n    \"accessRights_url\": \"\",\n    \"related_publications\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_websites\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_metadata\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_data\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"related_services\": [\n        {\n            \"related_title\": \"\",\n            \"related_url\": \"\",\n            \"related_notes\": \"\"\n        }\n    ],\n    \"license_identifier\": \"\",\n    \"license_notes\": \"\",\n    \"license_other_url\": \"\",\n    \"license_statement\": \"Copyright ReDBox Research Data 2018\",\n    \"license_statement_url\": \"\",\n    \"citation_doi\": \"\",\n    \"requestIdentifier\": [],\n    \"citation_title\": \"A Data Record\",\n    \"creators\": [\n        {\n            \"text_full_name\": \"Alberto Zweinstein\",\n            \"email\": \"alberto.zweinstein@example.edu.au\",\n            \"role\": \"Chief Investigator\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"Zweinstein\",\n            \"given_name\": \"Alberto\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Data manager\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": \"Prof Paul Gleeson\",\n            \"email\": \"notAReal@email.edu.au\",\n            \"role\": \"Contributors\",\n            \"username\": \"\",\n            \"orcid\": \"http://orcid.org/0000-0000-0000-000\",\n            \"family_name\": \"Paul Gleeson\",\n            \"given_name\": \"Prof\"\n        },\n        {\n            \"text_full_name\": null,\n            \"email\": null,\n            \"role\": \"Supervisor\",\n            \"username\": \"\",\n            \"orcid\": \"\",\n            \"family_name\": \"\",\n            \"given_name\": \"\"\n        }\n    ],\n    \"citation_publisher\": \"ReDBox Research Data\",\n    \"citation_url\": \"\",\n    \"citation_publication_date\": \"\",\n    \"citation_generated\": \"Zweinstein, Alberto; Paul Gleeson, Prof; Paul Gleeson, Prof (Invalid date): A Data Record. ReDBox Research Data. {ID_WILL_BE_HERE}\",\n    \"dataowner_name\": \"Alberto Zweinstein\",\n    \"dataowner_email\": \"alberto.zweinstein@example.edu.au\",\n    \"contributor_ci\": {\n        \"text_full_name\": \"Alberto Zweinstein\",\n        \"full_name_honorific\": \"Dr Alberto Zweinstein\",\n        \"email\": \"alberto.zweinstein@example.edu.au\",\n        \"given_name\": \"Alberto\",\n        \"family_name\": \"Zweinstein\",\n        \"honorific\": \"Dr\",\n        \"full_name_family_name_first\": \"Zweinstein, Alberto\",\n        \"username\": \"\",\n        \"role\": \"Chief Investigator\"\n    },\n    \"contributor_data_manager\": {\n        \"text_full_name\": \"Prof Paul Gleeson\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"notAReal@email.edu.au\",\n        \"given_name\": \"Prof\",\n        \"family_name\": \"Paul Gleeson\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"Paul Gleeson, Prof\",\n        \"username\": \"\",\n        \"role\": \"Data manager\",\n        \"orcid\": \"http://orcid.org/0000-0000-0000-000\"\n    },\n    \"contributor_supervisor\": {\n        \"text_full_name\": \"\",\n        \"full_name_honorific\": \"\",\n        \"email\": \"\",\n        \"given_name\": \"\",\n        \"family_name\": \"\",\n        \"honorific\": \"\",\n        \"full_name_family_name_first\": \"\",\n        \"username\": \"\",\n        \"role\": \"Supervisor\"\n    },\n    \"embargoByDate\": \"\",\n    \"embargoUntil\": null,\n    \"embargoNote\": \"\",\n    \"reviewerNote\": \"\",\n    \"ckanLocation\": \"\"\n}"
								},
								"url": {
									"raw": "{{host}}/default/rdmp/recordmeta/{{dataPublicationOid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"recordmeta",
										"{{dataPublicationOid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout Researcher User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Connection",
										"value": "keep-alive"
									},
									{
										"key": "Pragma",
										"value": "no-cache"
									},
									{
										"key": "Cache-Control",
										"value": "no-cache"
									},
									{
										"key": "Upgrade-Insecure-Requests",
										"value": "1"
									},
									{
										"key": "User-Agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36"
									},
									{
										"key": "Accept",
										"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"
									},
									{
										"key": "Referer",
										"value": "{{host}}/default/rdmp/researcher/home"
									},
									{
										"key": "Accept-Encoding",
										"value": "gzip, deflate, br"
									},
									{
										"key": "Accept-Language",
										"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
									},
									{
										"key": "Cookie",
										"value": "{{cookie}}"
									}
								],
								"url": {
									"raw": "{{host}}/default/rdmp/user/logout",
									"host": [
										"{{host}}"
									],
									"path": [
										"default",
										"rdmp",
										"user",
										"logout"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "OpenID Connect",
			"item": [
				{
					"name": "Load login page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    // Just loading page to get a session cookiw",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						},
						"followRedirects": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Pragma",
								"value": "no-cache"
							},
							{
								"key": "Referer",
								"value": "http://localhost:1500/default/rdmp/user/login"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "document"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "navigate"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-User",
								"value": "?1"
							},
							{
								"key": "Upgrade-Insecure-Requests",
								"value": "1"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36"
							},
							{
								"key": "sec-ch-ua",
								"value": "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"100\", \"Google Chrome\";v=\"100\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"macOS\""
							}
						],
						"url": {
							"raw": "http://localhost:1500/default/rdmp/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1500",
							"path": [
								"default",
								"rdmp",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Begin OIDC login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"    postman.setEnvironmentVariable(\"kc_redir_url\", pm.response.headers.get('Location'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						},
						"followRedirects": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Pragma",
								"value": "no-cache"
							},
							{
								"key": "Referer",
								"value": "http://localhost:1500/default/rdmp/user/login"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "document"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "navigate"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-User",
								"value": "?1"
							},
							{
								"key": "Upgrade-Insecure-Requests",
								"value": "1"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36"
							},
							{
								"key": "sec-ch-ua",
								"value": "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"100\", \"Google Chrome\";v=\"100\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"macOS\""
							}
						],
						"url": {
							"raw": "http://localhost:1500/user/begin_oidc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1500",
							"path": [
								"user",
								"begin_oidc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Keycloak login page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    const $ = cheerio.load(pm.response.text());",
									"",
									"    postman.setEnvironmentVariable(\"kc_login_url\", $(\"#kc-form-login\").attr('action'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						},
						"followRedirects": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Pragma",
								"value": "no-cache"
							},
							{
								"key": "Referer",
								"value": "http://localhost:1500/default/rdmp/user/login"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "document"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "navigate"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-User",
								"value": "?1"
							},
							{
								"key": "Upgrade-Insecure-Requests",
								"value": "1"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36"
							},
							{
								"key": "sec-ch-ua",
								"value": "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"100\", \"Google Chrome\";v=\"100\""
							},
							{
								"key": "sec-ch-ua-mobile",
								"value": "?0"
							},
							{
								"key": "sec-ch-ua-platform",
								"value": "\"macOS\""
							}
						],
						"url": {
							"raw": "{{kc_redir_url}}",
							"host": [
								"{{kc_redir_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Keycloak login action",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"    postman.setEnvironmentVariable(\"rb_login_url\", pm.response.headers.get('Location'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followRedirects": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Origin",
								"value": "null"
							},
							{
								"key": "Pragma",
								"value": "no-cache"
							},
							{
								"key": "Upgrade-Insecure-Requests",
								"value": "1"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "test-researcher",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								},
								{
									"key": "credentialId",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{kc_login_url}}",
							"host": [
								"{{kc_login_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "RedBox OIDC return login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Welcome message in HTML\", function () {",
									"    //Testing login worked by looking for welcome message on page",
									"    pm.expect(pm.response.text()).to.include(\"Test Researcher\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
							},
							{
								"key": "Accept-Language",
								"value": "en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Pragma",
								"value": "no-cache"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "document"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "navigate"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "cross-site"
							},
							{
								"key": "Sec-Fetch-User",
								"value": "?1"
							},
							{
								"key": "Upgrade-Insecure-Requests",
								"value": "1"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36"
							}
						],
						"url": {
							"raw": "{{rb_login_url}}",
							"host": [
								"{{rb_login_url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "General",
			"item": [
				{
					"name": "Get stylesheet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has valid content\", function () {",
									"    pm.expect(pm.response.stream.toString()).to.match(/^@charset \"UTF-8\"/)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){},30000)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/default/rdmp/styles/style.min.css",
							"host": [
								"{{host}}"
							],
							"path": [
								"default",
								"rdmp",
								"styles",
								"style.min.css"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get logo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Has valid content and type\", function () {",
									"    pm.response.to.have.header(\"Content-Type\", \"image/png\")",
									"    pm.expect(pm.response.size().body).to.be.greaterThan(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/default/rdmp/images/logo",
							"host": [
								"{{host}}"
							],
							"path": [
								"default",
								"rdmp",
								"images",
								"logo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Solr",
			"item": [
				{
					"name": "Start indexing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Solr HTTP status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Solr reports no error\", function () {",
									"    pm.expect(pm.response.stream.toString()).to.include('\"status\":0')",
									"});",
									"",
									"pm.test(\"Solr reports Query Time\", function () {",
									"    pm.expect(pm.response.stream.toString()).to.include('\"QTime\":')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(function(){},30000)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{solrhost}}/solr/redbox/update/json?wt=json&add=[8d95849003df11ed8b078341db3bde98 (1738385794638282752)]",
							"host": [
								"{{solrhost}}"
							],
							"path": [
								"solr",
								"redbox",
								"update",
								"json"
							],
							"query": [
								{
									"key": "wt",
									"value": "json"
								},
								{
									"key": "add",
									"value": "[8d95849003df11ed8b078341db3bde98 (1738385794638282752)]"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}