"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
let expect;
import("chai").then(mod => expect = mod.expect);
describe('The FormsService', function () {
    before(function (done) {
        done();
    });
    it('should return the default RDMP form', function (done) {
        var brand = BrandingService.getDefault();
        var recordType = 'rdmp';
        var formName = 'default-1.0-draft';
        RecordType.find().then(forms => {
            sails.log.verbose(`going to look for ${brand.id}_${recordType}`);
            sails.log.verbose(forms);
        });
        console.log('brand.id ' + brand.id + ' recordType ' + recordType);
        FormsService.getFormByStartingWorkflowStep(brand, recordType, true).subscribe(function (form) {
            expect(form).to.have.property('name', formName);
            done();
        });
    });
    it('should get dataPublication-1.0-embargoed form', function (done) {
        var formName = 'dataPublication-1.0-embargoed';
        FormsService.getFormByName(formName, true).subscribe(function (form) {
            console.log(form);
            expect(form).to.have.property('name', formName);
            done();
        });
    });
    it('should return the form based of a given record', function (done) {
        let brand = BrandingService.getDefault();
        let formName = 'default-1.0-draft';
        let record = {
            metaMetadata: {
                form: formName,
                type: 'rdmp'
            }
        };
        FormsService.getForm(brand, '', true, '', record).then(form => {
            expect(form).to.have.property('name', formName);
            done();
        });
    });
    it('should return the autogenerated form based of a given record', function (done) {
        let brand = BrandingService.getDefault();
        let formName = 'generated-view-only';
        let record = {
            metaMetadata: {
                form: formName,
                type: 'rdmp'
            },
            metadata: {
                ID: 's823456',
                GIVEN_NAME: 'Ant10',
                OTHER_NAMES: 'Other',
                FAMILY_NAME: 'Season',
                PREF_NAME: 'Ant',
                HONORIFIC: 'Sr',
                EMAIL: 'notAReal@email.edu.au',
                JOB_TITLE: 'Assistant Professor',
                NLA_PARTY_IDENTIFIER: '',
                URIs: ['URI1', 'URI2', 'URI3'],
                ORCID: '0000-0001-7269-2286',
                PERSONAL_HOMEPAGE: '',
                STAFF_PROFILE_HOMEPAGE: '',
                DESCRIPTION: '',
                RESEARCH_ELEMENTS_USER_ID: '12345678',
                contributor_ci: {
                    text_full_name: 'Prof Ant10 Season',
                    email: 'notAReal@email.edu.au',
                    orcid: 'http://orcid.org/0000-0000-0000-000'
                },
                contributor_data_manager: [{
                        text_full_name: 'Prof Ant Season',
                        email: 'notAReal@email.edu.au',
                        orcid: 'http://orcid.org/0000-0000-0000-000'
                    }]
            }
        };
        FormsService.getForm(brand, '', true, '', record).then(form => {
            expect(form).to.have.property('name', formName);
            done();
        });
    });
    it('should return the form', function (done) {
        let brand = BrandingService.getDefault();
        let formName = 'default-1.0-draft';
        FormsService.getForm(brand, formName, true, 'rdmp', {}).then(form => {
            expect(form).to.have.property('name', formName);
            done();
        });
    });
    it('should return the autogenerated form', function (done) {
        let brand = BrandingService.getDefault();
        let formName = 'generated-view-only';
        FormsService.getForm(brand, formName, true, 'rdmp', {}).then(form => {
            expect(form).to.have.property('name', formName);
            done();
        });
    });
    describe("build client form config", function () {
        it('should build the expected config', function (done) {
            const formConfig = {
                name: "basic-form",
                type: "rdmp",
                debugValue: true,
                domElementType: 'form',
                defaultComponentConfig: {
                    defaultComponentCssClasses: 'row',
                },
                editCssClasses: "redbox-form form",
                skipValidationOnSave: false,
                componentDefinitions: [
                    {
                        name: 'text_2',
                        layout: {
                            class: 'DefaultLayoutComponent',
                            config: {
                                label: 'TextField with default wrapper defined',
                                helpText: 'This is a help text',
                            }
                        },
                        model: {
                            class: 'SimpleInputModel',
                            config: {
                                defaultValue: 'hello world 2!',
                            }
                        },
                        component: {
                            class: 'SimpleInputComponent',
                        },
                        constraints: {
                            authorization: {
                                allowRoles: [],
                            },
                            allowModes: [],
                        },
                    }
                ]
            };
            const expected = {
                name: "basic-form",
                type: "rdmp",
                debugValue: true,
                domElementType: 'form',
                defaultComponentConfig: {
                    defaultComponentCssClasses: 'row',
                },
                editCssClasses: "redbox-form form",
                skipValidationOnSave: false,
                componentDefinitions: [
                    {
                        name: 'text_2',
                        layout: {
                            class: 'DefaultLayoutComponent',
                            config: {
                                label: 'TextField with default wrapper defined',
                                helpText: 'This is a help text',
                            }
                        },
                        model: {
                            class: 'SimpleInputModel',
                            config: {
                                value: 'hello world 2!',
                            }
                        },
                        component: {
                            class: 'SimpleInputComponent',
                        },
                    }
                ]
            };
            const original = JSON.stringify(formConfig);
            const result = FormsService.buildClientFormConfig(formConfig);
            // ensure the formConfig has not been modified
            expect(JSON.stringify(formConfig)).to.eql(original);
            // confirm the client form config looks as expected
            expect(result).to.eql(expected);
            done();
        });
        it('should remove the component because the user does not have the required roles', function (done) {
            const formConfig = {
                name: "remove-item-constraint-roles",
                type: "rdmp",
                debugValue: true,
                domElementType: 'form',
                defaultComponentConfig: {
                    defaultComponentCssClasses: 'row',
                },
                editCssClasses: "redbox-form form",
                skipValidationOnSave: false,
                componentDefinitions: [
                    {
                        name: 'text_1',
                        component: {
                            class: 'SimpleInputComponent',
                        },
                    },
                    {
                        name: 'text_2',
                        layout: {
                            class: 'DefaultLayoutComponent',
                            config: {
                                label: 'TextField with default wrapper defined',
                                helpText: 'This is a help text',
                            }
                        },
                        model: {
                            class: 'SimpleInputModel',
                            config: {
                                defaultValue: 'hello world 2!',
                            }
                        },
                        component: {
                            class: 'SimpleInputComponent',
                        },
                        constraints: {
                            authorization: {
                                allowRoles: ['Admin', 'Librarians'],
                            },
                            allowModes: [],
                        },
                    }
                ]
            };
            const expected = {
                name: "remove-item-constraint-roles",
                type: "rdmp",
                debugValue: true,
                domElementType: 'form',
                defaultComponentConfig: {
                    defaultComponentCssClasses: 'row',
                },
                editCssClasses: "redbox-form form",
                skipValidationOnSave: false,
                componentDefinitions: [
                    {
                        name: 'text_1',
                        component: {
                            class: 'SimpleInputComponent',
                        },
                    }
                ]
            };
            const original = JSON.stringify(formConfig);
            const result = FormsService.buildClientFormConfig(formConfig);
            // ensure the formConfig has not been modified
            expect(JSON.stringify(formConfig)).to.eql(original);
            // confirm the client form config looks as expected
            expect(result).to.eql(expected);
            done();
        });
        it('should remove the component because the client does not have the required mode', function (done) {
            const formConfig = {
                name: "remove-item-constraint-mode",
                type: "rdmp",
                debugValue: true,
                domElementType: 'form',
                defaultComponentConfig: {
                    defaultComponentCssClasses: 'row',
                },
                editCssClasses: "redbox-form form",
                skipValidationOnSave: false,
                componentDefinitions: [
                    {
                        name: 'text_1',
                        component: {
                            class: 'SimpleInputComponent',
                        },
                    },
                    {
                        name: 'text_2',
                        layout: {
                            class: 'DefaultLayoutComponent',
                            config: {
                                label: 'TextField with default wrapper defined',
                                helpText: 'This is a help text',
                            }
                        },
                        model: {
                            class: 'SimpleInputModel',
                            config: {
                                defaultValue: 'hello world 2!',
                            }
                        },
                        component: {
                            class: 'SimpleInputComponent',
                        },
                        expressions: {
                            'model.value': {
                                template: `<%= _.get(model,'text_1_event','') %>`
                            }
                        },
                        constraints: {
                            authorization: {
                                allowRoles: [],
                            },
                            allowModes: ['edit'],
                        },
                    }
                ]
            };
            const expected = {
                name: "remove-item-constraint-mode",
                type: "rdmp",
                debugValue: true,
                domElementType: 'form',
                defaultComponentConfig: {
                    defaultComponentCssClasses: 'row',
                },
                editCssClasses: "redbox-form form",
                skipValidationOnSave: false,
                componentDefinitions: [
                    {
                        name: 'text_1',
                        component: {
                            class: 'SimpleInputComponent',
                        },
                    },
                ]
            };
            const original = JSON.stringify(formConfig);
            const result = FormsService.buildClientFormConfig(formConfig);
            // ensure the formConfig has not been modified
            expect(JSON.stringify(formConfig)).to.eql(original);
            // confirm the client form config looks as expected
            expect(result).to.eql(expected);
            done();
        });
        it('should remove the components nested in repeatable and group components when the constraints are not met', function (done) {
            const formConfig = {
                name: "remove-items-constrains-nested",
                type: "rdmp",
                debugValue: true,
                domElementType: 'form',
                defaultComponentConfig: {
                    defaultComponentCssClasses: 'row',
                },
                editCssClasses: "redbox-form form",
                skipValidationOnSave: false,
                componentDefinitions: [
                    {
                        name: 'repeatable_group_1',
                        model: {
                            class: 'RepeatableComponentModel',
                            config: { defaultValue: [{ text_1: "hello world from repeating groups" }] }
                        },
                        component: {
                            class: 'RepeatableComponent',
                            config: {
                                elementTemplate: {
                                    model: { class: 'GroupFieldModel', config: { defaultValue: {} } },
                                    component: {
                                        class: 'GroupFieldComponent',
                                        config: {
                                            wrapperCssClasses: 'col',
                                            componentDefinitions: [
                                                {
                                                    // requires mode edit, so expect to be removed
                                                    name: 'text_1',
                                                    model: {
                                                        class: 'SimpleInputModel',
                                                        config: { defaultValue: 'hello world 1!', }
                                                    },
                                                    component: { class: 'SimpleInputComponent' },
                                                    constraints: { allowModes: ['edit'] },
                                                },
                                                {
                                                    name: 'text_2',
                                                    model: { class: 'SimpleInputModel', config: { defaultValue: 'hello world 2!' } },
                                                    component: { class: 'SimpleInputComponent' },
                                                },
                                                {
                                                    // requires role 'Admin', so is removed
                                                    name: 'repeatable_for_admin',
                                                    model: { class: 'RepeatableComponentModel', config: {} },
                                                    component: {
                                                        class: 'RepeatableComponent',
                                                        config: {
                                                            elementTemplate: {
                                                                model: {
                                                                    class: 'SimpleInputModel',
                                                                    config: { defaultValue: 'hello world from repeatable for admin' }
                                                                },
                                                                component: { class: 'SimpleInputComponent' },
                                                                constraints: { authorization: { allowRoles: ['Admin'] } },
                                                            }
                                                        }
                                                    },
                                                }
                                            ]
                                        }
                                    },
                                    layout: {
                                        class: 'RepeatableElementLayoutComponent',
                                        config: { hostCssClasses: 'row align-items-start' }
                                    },
                                    // requires mode view, so is kept
                                    constraints: { authorization: { allowRoles: [] }, allowModes: ['view'] }
                                }
                            },
                        },
                        layout: {
                            class: 'DefaultLayoutComponent',
                            config: {
                                label: 'Repeatable TextField with default wrapper defined',
                                helpText: 'Repeatable component help text',
                            }
                        },
                    },
                ]
            };
            const expected = {
                name: "remove-items-constrains-nested",
                type: "rdmp",
                debugValue: true,
                domElementType: 'form',
                defaultComponentConfig: {
                    defaultComponentCssClasses: 'row',
                },
                editCssClasses: "redbox-form form",
                skipValidationOnSave: false,
                componentDefinitions: [
                    {
                        name: 'repeatable_group_1',
                        model: {
                            class: 'RepeatableComponentModel',
                            config: { value: [{ text_1: "hello world from repeating groups" }] }
                        },
                        component: {
                            class: 'RepeatableComponent',
                            config: {
                                elementTemplate: {
                                    model: { class: 'GroupFieldModel', config: { value: {} } },
                                    component: {
                                        class: 'GroupFieldComponent',
                                        config: {
                                            wrapperCssClasses: 'col',
                                            componentDefinitions: [
                                                // <-- requires mode edit, so expect to be removed
                                                {
                                                    name: 'text_2',
                                                    model: { class: 'SimpleInputModel', config: { value: 'hello world 2!' } },
                                                    component: { class: 'SimpleInputComponent' },
                                                },
                                                // <-- requires role 'Admin', so is removed
                                            ]
                                        }
                                    },
                                    layout: {
                                        class: 'RepeatableElementLayoutComponent',
                                        config: { hostCssClasses: 'row align-items-start' }
                                    },
                                    // <-- requires mode view, so is kept, constraints removed
                                }
                            },
                        },
                        layout: {
                            class: 'DefaultLayoutComponent',
                            config: {
                                label: 'Repeatable TextField with default wrapper defined',
                                helpText: 'Repeatable component help text',
                            }
                        },
                    },
                ]
            };
            const original = JSON.stringify(formConfig);
            const result = FormsService.buildClientFormConfig(formConfig);
            // ensure the formConfig has not been modified
            expect(JSON.stringify(formConfig)).to.eql(original);
            // confirm the client form config looks as expected
            expect(result).to.eql(expected);
            done();
        });
    });
});
//# sourceMappingURL=data:application/json;base64,