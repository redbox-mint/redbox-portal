meta {
  name: Second Phase of attachment upload
  type: http
  seq: 22
}

patch {
  url: http:{{attachmentLocation}}
  body: none
  auth: none
}

headers {
  Origin: {{host}}
  Accept-Encoding: gzip, deflate, br
  X-CSRF-Token: 
  Accept-Language: en-US,en;q=0.9,en-AU;q=0.8,it;q=0.7
  Tus-Resumable: 1.0.0
  
  Connection: keep-alive
  Pragma: no-cache
  User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36
  Content-Type: application/offset+octet-stream
  Accept: */*
  Cache-Control: no-cache
  Referer: {{host}}/default/rdmp/record/edit/b869b4fae83a1f01082465d165d868a8
  Upload-Offset: 0
}

script:pre-request {
  const fs = require('fs');
  const path = require('path');
  
  const attachmentFilename = "attachment.png";
  const attachmentPath = path.join(bru.cwd(), attachmentFilename);
  const attachment = fs.readFileSync(attachmentPath, "base64");
  const attachmentLength = attachment.length;
  
  req.setBody(attachment);

  const cookie = bru.getVar("cookie");
  
  if(cookie) {
    req.setHeader("Cookie", cookie)
  }
}

tests {
  test("Status code is 204", function () {
      expect(res.getStatus()).to.equal(204);
  });
}
