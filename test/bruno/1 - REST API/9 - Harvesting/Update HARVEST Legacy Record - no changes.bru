meta {
  name: Update HARVEST Legacy Record - no changes
  type: http
  seq: 3
}

post {
  url: {{host}}/default/rdmp/api/mint/harvest/rdmp
  body: json
  auth: none
}

headers {
  Content-Type: application/json
  Authorization: Bearer {{token}}
}

body:json {
  {
    "records": [
        {
            "harvest_id": "s123456",
            "metadata": {
                "data": {
                    "ID": "s123456",
                    "GIVEN_NAME": "Ant",
                    "OTHER_NAMES": "",
                    "FAMILY_NAME": "S",
                    "PREF_NAME": "",
                    "HONORIFIC": "",
                    "EMAIL": "notAReal@email.edu.au",
                    "JOB_TITLE": "Assistant Professor",
                    "URI": "",
                    "NLA_PARTY_IDENTIFIER": "",
                    "ORCID": "0000-0001-7269-2286",
                    "PERSONAL_HOMEPAGE": "",
                    "STAFF_PROFILE_HOMEPAGE": "",
                    "DESCRIPTION": "",
                    "RESEARCH_ELEMENTS_USER_ID": "12345678",
                    "title": "Mock mint record type rdmp integration test",
                    "contributor_ci": {
                        "text_full_name": "Prof Ant Season",
                        "email": "notAReal@email.edu.au",
                        "orcid": "http://orcid.org/0000-0000-0000-000"
                    },
                    "contributor_data_manager": {
                        "text_full_name": "Prof Ant Season",
                        "email": "notAReal@email.edu.au",
                        "orcid": "http://orcid.org/0000-0000-0000-000"
                    }
                }
            }
        }
    ]
  }
}

assert {
}

tests {
  test("Status code is 200", function () {
    expect(res.getStatus()).to.equal(200);
  });

  test("Test harvest response structure", function () {
    var body = res.getBody();
    // Normalise possible response shapes (array, records array, single object)
    if (Array.isArray(body)) {
      body = body[0];
    }
    if (body && body.records && Array.isArray(body.records)) {
      body = body.records[0];
    }

    expect(body).to.be.an('object');
    expect(body).to.have.property('oid');
    expect(body).to.have.property('harvestId');
    expect(body.harvestId).to.equal('s123456');

    if (body.message) {
      var msg = body.message;
      var harvestId = 's123456';
      var ok = /metadata sent is equal to metadata in existing record/i.test(msg)
        || /record (?:updated|created) successfully/i.test(msg)
        || /skip update of harvestId/i.test(msg)
        || (harvestId && msg.indexOf(harvestId) !== -1);
      expect(ok, 'Unexpected legacy harvest update message: ' + msg).to.equal(true);
    }
  });
}
